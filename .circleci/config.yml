---
version: 2.1

orbs:
  executor-tools: twdps/executor-tools@4.0.1
  op: twdps/onepassword@3.0.0
  do: twdps/pipeline-events@dev:alpha

globals:
  - &context platform
  - &shell op run --env-file op.env -- /bin/bash -eo pipefail

on-push-main: &on-push-main
  branches:
    only: /main/
  tags:
    ignore: /.*/

on-each-run: &on-each-run
  branches:
    only: /main/
  tags:
    only: /.*/

on-tag-main: &on-tag-main
  branches:
    ignore: /.*/
  tags:
    only: /.*/

commands:

  set-environment:
    steps:
      - op/env
      - op/write-to-file:
          op-value: platform/svc-cosign-private-key/notesPlain
          out-file: cosign.key
      - op/write-to-file:
          op-value: platform/svc-cosign-public-key/notesPlain
          out-file: cosign.pub

workflows:
  build and test:
    jobs:

      - executor-tools/dev-release:
          name: alpine image build
          context: *context
          shell: *shell
          dockerfile: Dockerfile.alpine
          image: twdps/circleci-remote-docker
          tag: alpine-edge
          snyk-scan: true
          snyk-severity-threshold: medium
          snyk-organization: twplatformlabs
          bats-test: true
          bats-entry-point: /bin/ash
          bats-test-path: test/circleci_remote_docker.bats
          opencontainer-labels: true
          security-scan-nofail: true
          after-checkout:
            - op/env
          filters: *on-each-run

      - executor-tools/dev-release:
          name: ubuntu image build
          context: *context
          shell: *shell
          dockerfile: Dockerfile.ubuntu
          image: twdps/circleci-remote-docker
          tag: ubuntu-edge
          snyk-scan: true
          snyk-severity-threshold: medium
          snyk-organization: twplatformlabs
          bats-test: true
          bats-entry-point: /bin/bash
          bats-test-path: test/circleci_remote_docker.bats
          opencontainer-labels: true
          security-scan-nofail: true
          after-checkout:
            - op/env
          filters: *on-each-run

      - executor-tools/publish:
          name: alpine release
          context: *context
          shell: *shell
          image: twdps/circleci-remote-docker
          pull-tag: alpine-edge
          tag-annotation: alpine-
          sign-image: true
          sbom: true
          after-checkout:
            - set-environment
          requires:
            - alpine image build
            - ubuntu image build
          filters: *on-tag-main

      - executor-tools/publish:
          name: ubuntu release
          context: *context
          shell: *shell
          image: twdps/circleci-remote-docker
          pull-tag: ubuntu-edge
          tag-annotation: ubuntu-
          sign-image: true
          sbom: true
          after-checkout:
            - set-environment
          requires:
            - alpine image build
            - ubuntu image build
          filters: *on-tag-main

      - do/gh-release:
          name: generate release notes
          shell: *shell
          context: *context
          notes-from-file: release.md
          include-commit-msg: true
          upload-artifacts: true
          artifact-folder: workspace
          before-release:
            - set-environment
          requires:
            - alpine release
            - ubuntu release
          filters: *on-tag-main

      - do/slack:
          context: *context
          channel: lab-events
          message: "New twdps/circleci-remote-docker release"
          include-tag: true
          before-message:
            - op/env
          requires:
            - alpine release
            - ubuntu release
          filters: *on-tag-main

  monthly build:
    when:
      equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - do/automated-tag:
          tag-type: monthly-recurring
          committer-email: twplatformlabs@gmail.com
          committer-name: twplatformlabs-sa

  schedule monthly build:
    jobs:
      - do/schedule-pipeline:
          name: configure scheduled pipeline run for monthly general release
          shell: *shell
          context: *context
          scheduled-pipeline-name: Monthly update release
          scheduled-pipeline-description: |
            Automatically build and release a current version of the remote-docker-ready image
            using the YYYY.MM tag format.
          hours-of-day: "[11]" # 11 am UTC = 6am Central
          days-of-month: "[5]" # 5th of each month
          filters: *on-push-main
